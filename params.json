{"name":"Quelea","tagline":"A Haskell library for declarative programming over eventually consistent store (Cassandra).","body":"### Welcome to Quelea's home\r\nQuelea is a Haskell library that is intended to simplify programming with eventually consistent NoSQL stores, such as Cassandra. Among other things, the library implements:\r\n\r\n+ A high-level logic-based DSL that lets NoSQL application programmers declare the consistency requirements of their applications as _contracts_, \r\n+ A static contract classification procedure that maps high-level application contracts to appropriate low-level store consistency guarantees, and\r\n+ A run-time that runs application operations after tuning the store consistency to appropriate levels as determined by the contract classification procedure.  \r\n\r\nWhile the implementations of DSL and the static contract classification components are largely independent of the actual NoSQL store used, the current implementation of run-time component is tailor-made to work with the Cassandra data store. \r\n\r\nFor further details, and to understand the theory behind Quelea, please read our [draft paper](http://gowthamk.github.io/docs/quelea.pdf).  \r\n\r\n### Try Quelea\r\n\r\nIf you want to quickly see Quelea in action, [download the VM](https://www.cs.purdue.edu/sss/projects/catalyst/UbuntuQuelea.tar.gz) (wrapped in a tar ball), open and _play_ it using Virtual Box or VMWare player, and follow the instructions [here](http://gowthamk.github.io/Quelea/) to run the benchmark suite that we built for evaluating Quelea.  \r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}